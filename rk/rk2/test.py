from main import *
import unittest

class Test1(unittest.TestCase):
    def setUp(self):
        self.part_1 = part_1
    def test_roots(self):
        self.assertEqual(self.part_1([('Карлос Клайбер', 73, 'Струнный'), ('Леонард Бернстайн', 71, 'Адажио'), ('Клаудио Аббадо', 79, 'Альт'), ('Пьер Булез', 80, 'Альт'), ('Карло Мария Джулини', 90, 'Адажио')]),[('Адажио', ['Леонард Бернстайн', 'Карло Мария Джулини']), ('Альт', ['Клаудио Аббадо', 'Пьер Булез'])] )

class Test2(unittest.TestCase):
    def setUp(self):
        self.part_2 = part_2
    def test_roots(self):
        self.assertEqual(self.part_2([('Карлос Клайбер', 73, 'Струнный'), ('Леонард Бернстайн', 71, 'Адажио'), ('Клаудио Аббадо', 79, 'Альт'), ('Пьер Булез', 80, 'Альт'), ('Карло Мария Джулини', 90, 'Адажио')]),[('Адажио', 90), ('Альт', 80), ('Струнный', 73)])

class Test3(unittest.TestCase):
    def setUp(self):
        self.part_3 = part_3
    def test_roots(self):
        self.assertEqual(self.part_3([('Карло Мария Джулини', 90, 'Адажио'), ('Леонард Бернстайн', 71, 'Адажио'), ('Карлос Клайбер', 73, 'Струнный'), ('Пьер Булез', 80, 'Альт'), ('Пьер Булез', 80, 'Альт'), ('Клаудио Аббадо', 79, 'Джазовый'), ('Леонард Бернстайн', 71, 'Симфонический'), ('Карло Мария Джулини', 90, 'Симфонический'), ('Карлос Клайбер', 73, 'Гармония'), ('Пьер Булез', 80, 'Гармония')]),[('Адажио', 'Карло Мария Джулини'), ('Симфонический', 'Карло Мария Джулини'), ('Струнный', 'Карлос Клайбер'), ('Гармония', 'Карлос Клайбер'), ('Джазовый', 'Клаудио Аббадо'), ('Адажио', 'Леонард Бернстайн'), ('Симфонический', 'Леонард Бернстайн'), ('Альт', 'Пьер Булез'), ('Альт', 'Пьер Булез'), ('Гармония', 'Пьер Булез')])

if __name__ == '__main__':
    unittest.main()
